apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-storage
  labels:
    app: data-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-storage
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: data-storage
    spec:
      containers:
      - name: data-storage
        image: "{{ .Values.containerimages.iiotServicesRegistry }}/{{ .Values.containerimages.iiotServicesRepoPrefix }}/{{ index .Values.containerimages.iiotServicesRepos.dataStorageRepo }}:{{ index .Values.containerimages.tags.iiotServices }}"
        imagePullPolicy: {{ .Values.containerimages.imagePullPolicy }}
        env:
        - name: DATASTORAGE_SgSystemConfiguration__AdminUser
          valueFrom:
            secretKeyRef:
              name: persistence-service-credentials
              key: username
        - name: DATASTORAGE_SgSystemConfiguration__AdminUserPassword
          valueFrom:
            secretKeyRef:
              name: persistence-service-credentials
              key: password
        - name: DATASTORAGE_SgSystemConfiguration__DatabaseUri
          valueFrom:
            secretKeyRef:
              name: persistence-service-credentials
              key: mongodb-uri
        - name: DATASTORAGE_Redis__Host
          value: {{ .Values.redis.hostname }}
        ports:
        - containerPort: 9460
        volumeMounts:
        - mountPath: /var/iiot-services-data
          name: iiot-services-data
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: {{ .Values.healthprobes.startupDelay }}
          periodSeconds: {{ .Values.healthprobes.pollingPeriod }}
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: {{ .Values.healthprobes.startupDelay }}
          periodSeconds: {{ .Values.healthprobes.pollingPeriod }}
      restartPolicy: Always
      imagePullSecrets: {{ toYaml .Values.containerimages.imagePullSecrets | nindent 8 }}
{{ if .Values.enableNodeSelectorLinux}}
      nodeSelector:
        kubernetes.io/os: linux
{{ end }}
      volumes:
      - name: iiot-services-data
        persistentVolumeClaim:
          claimName: {{ .Values.sharedVolume.name }}